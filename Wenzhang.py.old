#coding:utf-8
import urllib2
import UrlDownload
import db
import basefunc
import threading
from selenium import webdriver
from bs4 import BeautifulSoup
import requests
import UserAgents
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.common.keys import Keys
from time import sleep
import urlparse
import itertools
import cgi
import time


# t = '<abc>'
# html = cgi.escape(t)
# print(html)
# exit()


def caijiJson(m):
    #for i in itertools.count(1):
        #time.sleep(3)
        try:
            myTime = time.strftime('%Y%m%d', time.localtime(time.time() - 24 * 60 * 60))
            myTime = int(myTime)


            baseUrl = 'http://mp.weixin.qq.com'
            wzdata = db.getTmpArt()
            url = baseUrl + wzdata[2]   #搜狗微信文章link
  	    if len(wzdata) < 1:
		return False
	   
            urlParam = urlparse.urlparse(url)
            param = urlParam.query
            comment_url = 'http://mp.weixin.qq.com/mp/getcomment?{}'.format(param)
	    #print(comment_url)
	    #exit()

            html = UrlDownload.getwenzhanginfo(url)
            #print(html)
            #exit()

            #文章时间
            times = html.find("em", {"id": "post-date"})
            times = str(times.contents[0])
            times = times.replace('-','')

            times = int(times)

            if times != myTime:
                db.delTmpWen(wzdata[0])
                #continue
                # print(times)
                # print('---')
                # print(myTime)


            if html == None:
                #raise Exception("打开文章失败")
                raise Exception("open aticle error")

            # 获取微信文章真实地址
            trueUrl = UrlDownload.getwenzhangurl(url, html)

            #抓取微信一些基本信息
            data = basefunc.wenzhangDataFind(html)
            # print(data)
            # exit()
            if data == None:
                #raise Exception("获取文章基本失败")
                raise Exception("get article baseinfo error")

            if len(data) < 4:
                raise Exception("ewew")

            data.append(wzdata[1])

            #获取文章阅读数和点贊数
            dataJson = UrlDownload.getwenzhangjson(comment_url)
	    #print(dataJson)
	    #exit()
            if dataJson == None:
                #raise Exception("获取文章阅读数和点贊数失败")
                raise Exception("get article dianzan and yuedu error")
	    

            like_num = dataJson.get("like_num")
            read_num = dataJson.get("read_num")
            data.append(like_num)
            data.append(read_num)
            data.append(trueUrl)
            #print(data)
            #exit()
            bools = db.uptmpdata(data, wzdata[0])
            if bools == False:
                print(2)
                #continue

        except Exception as e:
            print(e)

#caijiJson(1)

def main(thread_num):
    thread_list = []  # 定义一个线程列表
    for i in range(thread_num):
        thread_list.append(threading.Thread(target=caijiJson, args=(3,)))
        time.sleep(1)
        thread_list.append(threading.Thread(target=caijiJson, args=(3,)))

    for a in thread_list:
        # a.setDaemon(True)这个setDaemon默认为False 非守护线程
        # 表示主线程等所有子线程结束后，在结束
        # 设置为True的话 表示是个守护线程 子线程就会随着主线程的结束而结束
        # 听说服务监控工具生成的心跳线程 就是用的守护线程
        a.start()

    for a in thread_list:
        a.join()  # 表示等待直到线程运行完毕


main(5)
